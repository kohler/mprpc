// -*- mode: c++ -*-
#ifndef VRNETCHANNEL_HH
#define VRNETCHANNEL_HH 1
#include "vrchannel.hh"
#include <tamer/fd.hh>

class Vrnetlistener : public Vrchannel {
  public:
    Vrnetlistener(String local_uid, Json peer_name, std::mt19937& rg);
    ~Vrnetlistener();

    inline bool ok() const {
        return fd_;
    }

    tamed void connect(String peer_uid, Json peer_name,
                       tamer::event<std::shared_ptr<Vrchannel> > done);
    tamed void receive_connection(tamer::event<std::shared_ptr<Vrchannel> > done);

    void close();

  private:
    tamer::fd fd_;
    std::mt19937& rg_;

    tamed void complete_unix_listen(String path);
};

#endif
